package driver;

import java.util.HashSet;
import java.util.Set;

/**
 * 
 * @author darshan.panse
 * This class holds the summary generated by the algorithm.
 * The red set holds the StudentPairs with the case of high plagiarism.
 * The yellow set holds the StudentPairs with the case for medium plagiarism.
 * The green set holds the StudentPairs with the case for no plagiarism.
 * 
 */
public class Summary {
	private Set<StudentPair> red = new HashSet<>();
	private Set<StudentPair> yellow = new HashSet<>();
	private Set<Integer> green = new HashSet<>();

	public Set<StudentPair> getRed() {
		return red;
	}

	public void setRed(StudentPair sp) {
		this.red.add(sp);
		
	}

	public Set<StudentPair> getYellow() {
		return yellow;
	}

	public void setYellow(StudentPair sp) {
		this.yellow.add(sp);
	}

	public Set<Integer> getGreen() {
		return green;
	}

	public void setGreen(Integer studentId) {
		this.green.add(studentId);
	}
	
	/**
	 * This method returns false if the given studentId is present in red or yellow lists,
	 * else returns true.
	 * @param studentId
	 * @return boolean
	 */
	public boolean isSafe(Integer studentId) {
		for(StudentPair sp: this.red) {
			if(studentId == sp.getStudent1Id() || studentId ==sp.getStudent2Id()) return false;
		}
		for(StudentPair sp: this.yellow) {
			if(studentId == sp.getStudent1Id() || studentId ==sp.getStudent2Id()) return false;
		}
		return true;
		
	}
}
